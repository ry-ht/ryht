[package]
name = "cortex-code-analysis"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true

[dependencies]
# Core dependencies
cortex-core = { path = "../cortex-core" }

# Tree-sitter parsing
tree-sitter = "0.25.10"
tree-sitter-rust = "0.24.0"
tree-sitter-typescript = "0.23.2"
tree-sitter-c = "0.24.1"
tree-sitter-cpp = "0.23.4"
tree-sitter-python = "0.25.0"
tree-sitter-java = "0.23.5"
tree-sitter-kotlin-ng = "1.1.0"
tree-sitter-javascript = "0.25.0"

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = "0.9"
toml = "0.9.8"
csv = "1.4.0"
chrono = { version = "0.4.42", features = ["serde"] }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# Logging
tracing = { workspace = true }

# Utilities
regex = { workspace = true }
aho-corasick = "1.1.3"
lazy_static = "1.5.0"
once_cell = "1.21.3"
num-traits = "0.2.19"
num-derive = "0.4.2"
num = "0.4.3"
num-format = "0.4.4"

# Caching
lru = "0.16.2"

# Concurrent processing
crossbeam = "0.8.4"
rayon = { workspace = true }
tokio = { workspace = true, features = ["fs", "sync", "rt", "macros"], optional = true }
futures = { version = "0.3.31", optional = true }

# Path handling
glob = "0.3.3"
globset = "0.4"
walkdir = "2.5.0"

# Graph data structures (for preprocessor dependency analysis)
petgraph = "0.8.3"

[dev-dependencies]
tokio = { workspace = true }
tempfile = { workspace = true }
criterion = { workspace = true }

[[bench]]
name = "manipulation_performance"
harness = false

[features]
default = ["rust", "typescript"]
rust = []
typescript = []
async = ["tokio", "futures"]
