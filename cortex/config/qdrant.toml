# Cortex Qdrant Configuration
#
# This file contains environment-specific configurations for Qdrant.
# Copy the appropriate section to your environment config or use environment variables.

# =============================================================================
# Development Configuration
# =============================================================================
[development]
# Connection settings
host = "localhost"
port = 6333
grpc_port = 6334
use_https = false
api_key = ""  # No API key in development

# Client settings
timeout_seconds = 30
connection_timeout_seconds = 5
keep_alive_interval_seconds = 60

# Collections
[development.collections]
# Vector dimensions for each collection
code_vectors = 1536
memory_vectors = 1536
document_vectors = 1536
ast_vectors = 768
dependency_vectors = 384

# HNSW parameters (relaxed for faster development)
[development.hnsw]
m = 16
ef_construct = 100
ef = 64
full_scan_threshold = 10000
on_disk = false

# Optimization settings
[development.optimizers]
deleted_threshold = 0.2
vacuum_min_vector_number = 1000
default_segment_number = 2
max_segment_size = 50000
memmap_threshold = 10000
indexing_threshold = 5000
flush_interval_sec = 5

# WAL configuration
[development.wal]
wal_capacity_mb = 32
wal_segments_ahead = 0

# Batch settings for ingestion
[development.batch]
batch_size = 100
max_retries = 3
retry_delay_ms = 1000

# =============================================================================
# Production Configuration
# =============================================================================
[production]
# Connection settings
host = "${QDRANT_HOST}"
port = "${QDRANT_HTTP_PORT}"
grpc_port = "${QDRANT_GRPC_PORT}"
use_https = true
api_key = "${QDRANT_API_KEY}"

# Client settings
timeout_seconds = 60
connection_timeout_seconds = 10
keep_alive_interval_seconds = 30

# TLS settings
[production.tls]
enabled = true
verify_certificates = true
ca_cert_path = "/etc/ssl/certs/ca-certificates.crt"

# Collections
[production.collections]
code_vectors = 1536
memory_vectors = 1536
document_vectors = 1536
ast_vectors = 768
dependency_vectors = 384

# HNSW parameters (optimized for production with 1M+ vectors)
[production.hnsw]
m = 16                      # Balanced accuracy and memory
ef_construct = 100          # Good construction quality
ef = 128                    # Higher search quality
full_scan_threshold = 10000 # Use HNSW after 10k vectors
on_disk = false            # Keep in memory for performance

# Optimization settings (tuned for 1M+ vectors)
[production.optimizers]
deleted_threshold = 0.2           # Clean up when 20% deleted
vacuum_min_vector_number = 1000   # Minimum vectors before vacuum
default_segment_number = 8        # More segments for parallelism
max_segment_size = 200000         # 200k vectors per segment
memmap_threshold = 50000          # Use mmap for large segments
indexing_threshold = 20000        # Batch 20k vectors before indexing
flush_interval_sec = 5            # Flush WAL every 5 seconds

# WAL configuration
[production.wal]
wal_capacity_mb = 32
wal_segments_ahead = 2

# Batch settings for ingestion
[production.batch]
batch_size = 500
max_retries = 5
retry_delay_ms = 2000
parallel_batches = 4

# Replication settings
[production.replication]
replication_factor = 1
write_consistency_factor = 1

# Sharding settings
[production.sharding]
shard_number = 1
# For multi-node deployments, increase shard_number
# shard_number = 4  # Example for 4-node cluster

# Performance monitoring
[production.monitoring]
enable_telemetry = true
metrics_port = 6333
health_check_interval_seconds = 30

# =============================================================================
# Test Configuration
# =============================================================================
[test]
# Connection settings
host = "localhost"
port = 6333
grpc_port = 6334
use_https = false
api_key = ""

# Client settings
timeout_seconds = 10
connection_timeout_seconds = 2
keep_alive_interval_seconds = 60

# Collections (smaller dimensions for faster tests)
[test.collections]
code_vectors = 384
memory_vectors = 384
document_vectors = 384
ast_vectors = 384
dependency_vectors = 384

# HNSW parameters (minimal for fast tests)
[test.hnsw]
m = 8
ef_construct = 50
ef = 32
full_scan_threshold = 1000
on_disk = false

# Optimization settings (minimal for tests)
[test.optimizers]
deleted_threshold = 0.5
vacuum_min_vector_number = 100
default_segment_number = 1
max_segment_size = 10000
memmap_threshold = 5000
indexing_threshold = 1000
flush_interval_sec = 1

# WAL configuration
[test.wal]
wal_capacity_mb = 16
wal_segments_ahead = 0

# Batch settings
[test.batch]
batch_size = 50
max_retries = 2
retry_delay_ms = 100

# =============================================================================
# Staging Configuration
# =============================================================================
[staging]
# Connection settings
host = "${QDRANT_HOST}"
port = "${QDRANT_HTTP_PORT}"
grpc_port = "${QDRANT_GRPC_PORT}"
use_https = true
api_key = "${QDRANT_API_KEY}"

# Client settings
timeout_seconds = 45
connection_timeout_seconds = 8
keep_alive_interval_seconds = 40

# TLS settings
[staging.tls]
enabled = true
verify_certificates = true

# Collections
[staging.collections]
code_vectors = 1536
memory_vectors = 1536
document_vectors = 1536
ast_vectors = 768
dependency_vectors = 384

# HNSW parameters (production-like)
[staging.hnsw]
m = 16
ef_construct = 100
ef = 96
full_scan_threshold = 10000
on_disk = false

# Optimization settings (production-like)
[staging.optimizers]
deleted_threshold = 0.2
vacuum_min_vector_number = 1000
default_segment_number = 6
max_segment_size = 150000
memmap_threshold = 40000
indexing_threshold = 15000
flush_interval_sec = 5

# WAL configuration
[staging.wal]
wal_capacity_mb = 32
wal_segments_ahead = 1

# Batch settings
[staging.batch]
batch_size = 400
max_retries = 4
retry_delay_ms = 1500
parallel_batches = 3

# =============================================================================
# Common Settings (applied to all environments)
# =============================================================================
[common]
# Payload indexes to create on all collections
payload_indexes = [
    "workspace_id:keyword",
    "project_id:keyword",
    "file_path:keyword",
    "language:keyword",
    "created_at:integer",
    "updated_at:integer"
]

# Collection-specific indexes
[common.collection_indexes.code_vectors]
indexes = [
    "function_name:text",
    "class_name:text",
    "symbol_type:keyword",
    "is_public:keyword"
]

[common.collection_indexes.memory_vectors]
indexes = [
    "memory_type:keyword",
    "session_id:keyword",
    "importance:float",
    "agent_id:keyword"
]

[common.collection_indexes.document_vectors]
indexes = [
    "doc_type:keyword",
    "section:text",
    "title:text"
]

# Backup settings
[common.backup]
enabled = true
backup_dir = "./backups/qdrant"
retention_days = 30
compression = true

# Health check settings
[common.health]
enabled = true
interval_seconds = 30
timeout_seconds = 5
failure_threshold = 3

# Logging
[common.logging]
level = "info"
format = "json"
file_path = "./logs/qdrant-client.log"
max_file_size_mb = 100
max_files = 10
