[workspace]
resolver = "2"
members = [
    "cortex-core",
    "cortex-storage",
    "cortex-vfs",
    "cortex-ingestion",
    "cortex-memory",
    "cortex-semantic",
    "cortex-mcp",
    "cortex-cli",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.75"
authors = ["Luxquant"]
license = "MIT"
repository = "https://github.com/ry-ht/ryht"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.48.0", features = ["full"] }
tokio-util = { version = "0.7.16", features = ["full"] }

# Database
surrealdb = { version = "2.3.10", features = ["kv-mem", "kv-rocksdb"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.145"
bincode = { version = "2.0.1", features = ["serde"] }

# Error handling
anyhow = "1.0.100"
thiserror = "2.0.17"

# Logging and tracing
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter", "json"] }
tracing-appender = "0.2.3"

# CLI
clap = { version = "4.5.50", features = ["derive", "env"] }

# HTTP and networking
reqwest = { version = "0.12.24", features = ["json", "rustls-tls"] }
axum = { version = "0.8.6", features = ["macros"] }
tower = { version = "0.5.2", features = ["full"] }
tower-http = { version = "0.6.6", features = ["trace", "cors"] }

# Async utilities
futures = "0.3.31"
async-trait = "0.1.89"
async-stream = "0.3.6"

# Time and date
chrono = { version = "0.4.42", features = ["serde"] }
time = { version = "0.3.44", features = ["serde", "macros"] }

# UUID
uuid = { version = "1.10", features = ["v4", "serde"] }

# Hashing and crypto
blake3 = "1.8.2"
sha2 = "0.10.9"

# Text processing
regex = "1.12.2"
unicode-segmentation = "1.12.0"

# Embeddings and ML
ort = { version = "1.16.3", features = ["load-dynamic"] }

# File watching
notify = "8.2.0"
ignore = "0.4.24"

# Configuration
config = "0.15.18"
toml = "0.9.8"

# Utilities
once_cell = "1.21.3"
parking_lot = "0.12.5"
dashmap = "6.1.0"
crossbeam = "0.8.4"
rayon = "1.11.0"

# Testing
mockall = "0.13.1"
tempfile = "3.23.0"
proptest = "1.8.0"

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1
strip = true

[profile.dev]
opt-level = 0
debug = true

[profile.test]
opt-level = 1

# Workspace-level integration tests package
[package]
name = "cortex-integration-tests"
version.workspace = true
edition.workspace = true

[dependencies]
cortex-core = { path = "cortex-core" }
cortex-storage = { path = "cortex-storage" }
cortex-vfs = { path = "cortex-vfs" }
cortex-memory = { path = "cortex-memory" }
cortex-semantic = { path = "cortex-semantic" }
cortex-ingestion = { path = "cortex-ingestion" }
# cortex-mcp = { path = "cortex-mcp" } # Temporarily disabled due to compilation errors
# cortex-cli = { path = "cortex-cli" } # Temporarily disabled

# Test dependencies
tokio.workspace = true
tempfile.workspace = true
serde.workspace = true
serde_json.workspace = true
uuid.workspace = true
chrono.workspace = true
tracing.workspace = true
futures.workspace = true

[[test]]
name = "cross_crate_integration"
path = "tests/cross_crate_integration.rs"
harness = true

[[test]]
name = "e2e_workflow_tests"
path = "tests/e2e_workflow_tests.rs"
harness = true

[[test]]
name = "test_complete_workflow"
path = "tests/test_complete_workflow.rs"
harness = true

[[test]]
name = "test_multi_agent_scenario"
path = "tests/test_multi_agent_scenario.rs"
harness = true

[[test]]
name = "test_memory_consolidation"
path = "tests/test_memory_consolidation.rs"
harness = true

[[test]]
name = "test_production_load"
path = "tests/test_production_load.rs"
harness = true

[[test]]
name = "test_surrealdb_integration"
path = "tests/test_surrealdb_integration.rs"
harness = true
