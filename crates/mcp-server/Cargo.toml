[package]
name = "mcp-server"
version = "0.1.0"
edition = "2021"
authors = ["Meridian Contributors"]
description = "Universal, type-safe, ergonomic Rust crate for building MCP (Model Context Protocol) servers"
license = "MIT"
repository = "https://github.com/omnitron-dev/meridian"
keywords = ["mcp", "model-context-protocol", "ai", "llm"]
categories = ["development-tools", "api-bindings"]

[dependencies]
# Core async runtime
tokio = { version = "1.48.0", features = ["full"] }
async-trait = "0.1.89"
futures = "0.3.31"

# Serialization and schema
serde = { version = "1.0.228", features = ["derive"] }
serde_json = "1.0.145"
schemars = { version = "1.0.4", features = ["preserve_order"] }

# HTTP transport (optional)
axum = { version = "0.8.6", optional = true, features = ["macros"] }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.6", features = ["cors", "trace"], optional = true }

# Error handling
thiserror = "2.0.17"
anyhow = "1.0.100"

# Logging
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

# Utilities
parking_lot = "0.12.5"
dashmap = "6.1.0"
regex = "1.12.2"
serde_bytes = "0.11.19"

[dev-dependencies]
tokio-test = "0.4.4"
proptest = "1.8.0"
criterion = "0.7.0"
tempfile = "3.23.0"

[features]
default = ["stdio"]
stdio = []
http = ["axum", "tower", "tower-http"]
websocket = []
all = ["stdio", "http", "websocket"]

[lib]
name = "mcp_server"
path = "src/lib.rs"

[[bench]]
name = "benchmarks"
harness = false
